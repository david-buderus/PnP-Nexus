plugins {
    id 'java'
    id 'jacoco'
}

def versionNumber = "v1.3.0"

repositories {
    mavenCentral()
}

def currentOS = org.gradle.internal.os.OperatingSystem.current()

if (!project.hasProperty("platform")) {
    ext.platform = 'other'

    if (currentOS.isWindows()) {
        platform = 'win'
    } else if (currentOS.isLinux()) {
        platform = 'linux'
    } else if (currentOS.isMacOsX()) {
        platform = 'mac'
    }
}

version = platform + '-' + versionNumber

dependencies {
    implementation project(':shared')
    implementation group: 'org.jetbrains', name: 'annotations', version: '16.0.1'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
    implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'
    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
    implementation group: 'org.apache.commons', name: 'commons-configuration2', version: '2.7'
    implementation group: 'org.apache.poi', name: 'poi', version: '4.0.0'
    implementation group: 'org.apache.poi', name: 'poi-scratchpad', version: '4.0.0'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '4.0.0'
    implementation group: 'net.sf.ucanaccess', name: 'ucanaccess', version: '4.0.4'
    implementation "org.openjfx:javafx-base:11:${platform}"
    implementation "org.openjfx:javafx-graphics:11:${platform}"
    implementation "org.openjfx:javafx-controls:11:${platform}"
    implementation "org.openjfx:javafx-fxml:11:${platform}"

    implementation group: 'org.bouncycastle', name: 'bctls-jdk15on', version: '1.69'
    implementation group: 'org.bouncycastle', name: 'bc-fips', version: '1.0.2.1'

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.5'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testImplementation "org.testfx:testfx-core:4.0.16-alpha"
    testImplementation "org.testfx:testfx-junit5:4.0.16-alpha"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task createProperties(dependsOn: processResources) {
    doLast {
        new File("$buildDir/resources/main/Version.properties").withWriter { w ->
            Properties p = new Properties()
            p['version'] = versionNumber
            p.store w, null
        }
    }
}

classes {
    dependsOn createProperties
}

jar {
    manifest {
        attributes 'Main-Class': 'de.pnp.manager.main.StartApplication'
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

jacoco {
    toolVersion = "0.8.7"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}
jacocoTestReport {
    dependsOn test
}