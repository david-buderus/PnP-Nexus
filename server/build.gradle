plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.springdoc.openapi-gradle-plugin" version "1.6.0"
    id "org.openapi.generator" version "6.6.0"
}

group = 'de.pnp.manager'
version = "v2.0.0-alpha"

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.jetbrains', name: 'annotations', version: '16.0.1'
    implementation group: 'com.google.guava', name: 'guava', version: '32.0.0-jre'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.5'

    implementation 'org.springframework.boot:spring-boot-starter-web:3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:3.1.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'


    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.21.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

jar {
    manifest {
        attributes 'Main-Class': 'de.pnp.manager.server.ServerApplication'
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}


jacoco {
    toolVersion = "0.8.10"
}

jacocoTestReport {
    dependsOn test
}

openApi {
    apiDocsUrl.set("http://localhost:8080/v3/api-docs")
    outputDir.set(file("$rootDir/docs"))
    outputFileName.set("swagger.json")
    waitTimeInSeconds.set(10)
    customBootRun {
        args.set(["--spring.profiles.active=special"])
    }
}

openApiGenerate {
    generatorName.set("typescript-axios")
    inputSpec.set("$rootDir/docs/swagger.json")
    outputDir.set("$rootDir/webapp/src/api")
}
