/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.LinkedHashSet;
import java.util.Set;
import org.openapitools.client.model.ItemTypeDto;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ItemTypeTranslationDto
 */
@JsonPropertyOrder({
  ItemTypeTranslationDto.JSON_PROPERTY_BROADER_VARIANTS,
  ItemTypeTranslationDto.JSON_PROPERTY_ID,
  ItemTypeTranslationDto.JSON_PROPERTY_TYPE
})
@JsonTypeName("ItemTypeTranslation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-30T12:56:25.947710400+01:00[Europe/Berlin]")
public class ItemTypeTranslationDto {
  public static final String JSON_PROPERTY_BROADER_VARIANTS = "broaderVariants";
  private Set<ItemTypeDto> broaderVariants = new LinkedHashSet<>();

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_TYPE = "type";
  private ItemTypeDto type;

  public ItemTypeTranslationDto() {
  }

  public ItemTypeTranslationDto broaderVariants(Set<ItemTypeDto> broaderVariants) {
    
    this.broaderVariants = broaderVariants;
    return this;
  }

  public ItemTypeTranslationDto addBroaderVariantsItem(ItemTypeDto broaderVariantsItem) {
    if (this.broaderVariants == null) {
      this.broaderVariants = new LinkedHashSet<>();
    }
    this.broaderVariants.add(broaderVariantsItem);
    return this;
  }

   /**
   * Get broaderVariants
   * @return broaderVariants
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BROADER_VARIANTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Set<ItemTypeDto> getBroaderVariants() {
    return broaderVariants;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_BROADER_VARIANTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBroaderVariants(Set<ItemTypeDto> broaderVariants) {
    this.broaderVariants = broaderVariants;
  }


  public ItemTypeTranslationDto id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public ItemTypeTranslationDto type(ItemTypeDto type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ItemTypeDto getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(ItemTypeDto type) {
    this.type = type;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemTypeTranslationDto itemTypeTranslation = (ItemTypeTranslationDto) o;
    return Objects.equals(this.broaderVariants, itemTypeTranslation.broaderVariants) &&
        Objects.equals(this.id, itemTypeTranslation.id) &&
        Objects.equals(this.type, itemTypeTranslation.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(broaderVariants, id, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemTypeTranslationDto {\n");
    sb.append("    broaderVariants: ").append(toIndentedString(broaderVariants)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

