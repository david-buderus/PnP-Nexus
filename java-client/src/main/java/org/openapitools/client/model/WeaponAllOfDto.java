/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import org.openapitools.client.model.MaterialDto;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * WeaponAllOfDto
 */
@JsonPropertyOrder({
  WeaponAllOfDto.JSON_PROPERTY_DAMAGE,
  WeaponAllOfDto.JSON_PROPERTY_DICE,
  WeaponAllOfDto.JSON_PROPERTY_HIT,
  WeaponAllOfDto.JSON_PROPERTY_INITIATIVE,
  WeaponAllOfDto.JSON_PROPERTY_MATERIAL,
  WeaponAllOfDto.JSON_PROPERTY_UPGRADE_SLOTS
})
@JsonTypeName("Weapon_allOf")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-12-30T12:56:25.947710400+01:00[Europe/Berlin]")
public class WeaponAllOfDto {
  public static final String JSON_PROPERTY_DAMAGE = "damage";
  private Integer damage;

  public static final String JSON_PROPERTY_DICE = "dice";
  private String dice;

  public static final String JSON_PROPERTY_HIT = "hit";
  private Integer hit;

  public static final String JSON_PROPERTY_INITIATIVE = "initiative";
  private Float initiative;

  public static final String JSON_PROPERTY_MATERIAL = "material";
  private MaterialDto material;

  public static final String JSON_PROPERTY_UPGRADE_SLOTS = "upgradeSlots";
  private Integer upgradeSlots;

  public WeaponAllOfDto() {
  }

  public WeaponAllOfDto damage(Integer damage) {
    
    this.damage = damage;
    return this;
  }

   /**
   * Get damage
   * @return damage
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DAMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDamage() {
    return damage;
  }


  @JsonProperty(JSON_PROPERTY_DAMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDamage(Integer damage) {
    this.damage = damage;
  }


  public WeaponAllOfDto dice(String dice) {
    
    this.dice = dice;
    return this;
  }

   /**
   * Get dice
   * @return dice
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDice() {
    return dice;
  }


  @JsonProperty(JSON_PROPERTY_DICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDice(String dice) {
    this.dice = dice;
  }


  public WeaponAllOfDto hit(Integer hit) {
    
    this.hit = hit;
    return this;
  }

   /**
   * Get hit
   * @return hit
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getHit() {
    return hit;
  }


  @JsonProperty(JSON_PROPERTY_HIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHit(Integer hit) {
    this.hit = hit;
  }


  public WeaponAllOfDto initiative(Float initiative) {
    
    this.initiative = initiative;
    return this;
  }

   /**
   * Get initiative
   * @return initiative
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INITIATIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getInitiative() {
    return initiative;
  }


  @JsonProperty(JSON_PROPERTY_INITIATIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitiative(Float initiative) {
    this.initiative = initiative;
  }


  public WeaponAllOfDto material(MaterialDto material) {
    
    this.material = material;
    return this;
  }

   /**
   * Get material
   * @return material
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MATERIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MaterialDto getMaterial() {
    return material;
  }


  @JsonProperty(JSON_PROPERTY_MATERIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaterial(MaterialDto material) {
    this.material = material;
  }


  public WeaponAllOfDto upgradeSlots(Integer upgradeSlots) {
    
    this.upgradeSlots = upgradeSlots;
    return this;
  }

   /**
   * Get upgradeSlots
   * @return upgradeSlots
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPGRADE_SLOTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUpgradeSlots() {
    return upgradeSlots;
  }


  @JsonProperty(JSON_PROPERTY_UPGRADE_SLOTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpgradeSlots(Integer upgradeSlots) {
    this.upgradeSlots = upgradeSlots;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WeaponAllOfDto weaponAllOf = (WeaponAllOfDto) o;
    return Objects.equals(this.damage, weaponAllOf.damage) &&
        Objects.equals(this.dice, weaponAllOf.dice) &&
        Objects.equals(this.hit, weaponAllOf.hit) &&
        Objects.equals(this.initiative, weaponAllOf.initiative) &&
        Objects.equals(this.material, weaponAllOf.material) &&
        Objects.equals(this.upgradeSlots, weaponAllOf.upgradeSlots);
  }

  @Override
  public int hashCode() {
    return Objects.hash(damage, dice, hit, initiative, material, upgradeSlots);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WeaponAllOfDto {\n");
    sb.append("    damage: ").append(toIndentedString(damage)).append("\n");
    sb.append("    dice: ").append(toIndentedString(dice)).append("\n");
    sb.append("    hit: ").append(toIndentedString(hit)).append("\n");
    sb.append("    initiative: ").append(toIndentedString(initiative)).append("\n");
    sb.append("    material: ").append(toIndentedString(material)).append("\n");
    sb.append("    upgradeSlots: ").append(toIndentedString(upgradeSlots)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

