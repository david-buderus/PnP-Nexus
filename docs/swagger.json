{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/api/authentication/current-user": {
      "get": {
        "operationId": "getUsername",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Returns the username of the authenticated user",
        "tags": [
          "authentication-service"
        ]
      }
    },
    "/api/backup/export": {
      "get": {
        "operationId": "exportBackup",
        "parameters": [
          {
            "in": "query",
            "name": "universes",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/zip": {
                "schema": {
                  "$ref": "#/components/schemas/StreamingResponseBody"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Creates a backup of the nexus",
        "tags": [
          "backup-service"
        ]
      }
    },
    "/api/backup/import": {
      "post": {
        "operationId": "importBackup",
        "parameters": [
          {
            "in": "query",
            "name": "backup",
            "required": true,
            "schema": {
              "type": "string",
              "format": "binary"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Import a backup to the nexus",
        "tags": [
          "backup-service"
        ]
      }
    },
    "/api/universes": {
      "get": {
        "operationId": "getAllUniverses",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Universe"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get all Universes",
        "tags": [
          "universe-service"
        ]
      },
      "post": {
        "operationId": "createUniverse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Universe"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Universe"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Create a universe",
        "tags": [
          "universe-service"
        ]
      }
    },
    "/api/universes/{universe}": {
      "delete": {
        "operationId": "deleteUniverse",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Delete a universe",
        "tags": [
          "universe-service"
        ]
      },
      "get": {
        "operationId": "getUniverse",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Universe"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get a universe",
        "tags": [
          "universe-service"
        ]
      },
      "put": {
        "operationId": "updateUniverse",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Universe"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Universe"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Update a universe",
        "tags": [
          "universe-service"
        ]
      }
    },
    "/api/universes/{universe}/permission": {
      "delete": {
        "operationId": "removeUniversePermission",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "displayName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Removes all access rights to the universe from the given user",
        "tags": [
          "universe-service"
        ]
      },
      "get": {
        "operationId": "getUniversePermissions",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserUniversePermissionDTO"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "List all access rights of the universe",
        "tags": [
          "universe-service"
        ]
      },
      "post": {
        "operationId": "addUniversePermission",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "displayName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "accessPermission",
            "required": false,
            "schema": {
              "type": "string",
              "default": "READ"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Add the given access right to the given user",
        "tags": [
          "universe-service"
        ]
      }
    },
    "/api/users": {
      "get": {
        "operationId": "getDisplayNames",
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get all display names",
        "tags": [
          "user-service"
        ]
      },
      "post": {
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PnPUserCreation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Create a user",
        "tags": [
          "user-service"
        ]
      }
    },
    "/api/users/{username}": {
      "delete": {
        "operationId": "removeUser",
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Delete a user",
        "tags": [
          "user-service"
        ]
      },
      "get": {
        "operationId": "getUser",
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PnPUser"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get a user",
        "tags": [
          "user-service"
        ]
      },
      "put": {
        "operationId": "updateUser",
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PnPUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Updates a user",
        "tags": [
          "user-service"
        ]
      }
    },
    "/api/users/{username}/password": {
      "post": {
        "operationId": "updatePassword",
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordChange"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Updates the password of a user",
        "tags": [
          "user-service"
        ]
      }
    },
    "/api/users/{username}/permissions": {
      "get": {
        "operationId": "getPermissions",
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/GrantedUniverseAuthorityDTO"
                      },
                      {
                        "$ref": "#/components/schemas/RoleAuthorityDTO"
                      }
                    ]
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Gets the permissions of a user",
        "tags": [
          "user-service"
        ]
      },
      "post": {
        "operationId": "updatePermissions",
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GrantedUniverseAuthorityDTO"
                    },
                    {
                      "$ref": "#/components/schemas/RoleAuthorityDTO"
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Updates the permissions of a user",
        "tags": [
          "user-service"
        ]
      }
    },
    "/api/{universe}/crafting-recipes": {
      "delete": {
        "operationId": "deleteAllCraftingRecipes",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Deletes all objects with the given ids from the database",
        "tags": [
          "crafting-recipe-service"
        ]
      },
      "get": {
        "operationId": "getAllCraftingRecipes",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CraftingRecipe"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get all objects from the database",
        "tags": [
          "crafting-recipe-service"
        ]
      },
      "post": {
        "operationId": "insertAllCraftingRecipes",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CraftingRecipe"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CraftingRecipe"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Inserts the objects into the database",
        "tags": [
          "crafting-recipe-service"
        ]
      }
    },
    "/api/{universe}/crafting-recipes/{id}": {
      "delete": {
        "operationId": "deleteCraftingRecipe",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Deletes an object from the database",
        "tags": [
          "crafting-recipe-service"
        ]
      },
      "get": {
        "operationId": "getCraftingRecipe",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CraftingRecipe"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get an object from the database",
        "tags": [
          "crafting-recipe-service"
        ]
      },
      "put": {
        "operationId": "updateCraftingRecipe",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CraftingRecipe"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CraftingRecipe"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Updates an object in the database",
        "tags": [
          "crafting-recipe-service"
        ]
      }
    },
    "/api/{universe}/item-type-translations": {
      "delete": {
        "operationId": "deleteAllItemTypeTranslations",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Deletes all objects with the given ids from the database",
        "tags": [
          "item-type-translation-service"
        ]
      },
      "get": {
        "operationId": "getAllItemTypeTranslations",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemTypeTranslation"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get all objects from the database",
        "tags": [
          "item-type-translation-service"
        ]
      },
      "post": {
        "operationId": "insertAllItemTypeTranslations",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ItemTypeTranslation"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemTypeTranslation"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Inserts the objects into the database",
        "tags": [
          "item-type-translation-service"
        ]
      }
    },
    "/api/{universe}/item-type-translations/{id}": {
      "delete": {
        "operationId": "deleteItemTypeTranslation",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Deletes an object from the database",
        "tags": [
          "item-type-translation-service"
        ]
      },
      "get": {
        "operationId": "getItemTypeTranslation",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ItemTypeTranslation"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get an object from the database",
        "tags": [
          "item-type-translation-service"
        ]
      },
      "put": {
        "operationId": "updateItemTypeTranslation",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemTypeTranslation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ItemTypeTranslation"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Updates an object in the database",
        "tags": [
          "item-type-translation-service"
        ]
      }
    },
    "/api/{universe}/item-types": {
      "delete": {
        "operationId": "deleteAllItemTypes",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Deletes all objects with the given ids from the database",
        "tags": [
          "item-type-service"
        ]
      },
      "get": {
        "operationId": "getAllItemTypes",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemType"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get all objects from the database",
        "tags": [
          "item-type-service"
        ]
      },
      "post": {
        "operationId": "insertAllItemTypes",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ItemType"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ItemType"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Inserts the objects into the database",
        "tags": [
          "item-type-service"
        ]
      }
    },
    "/api/{universe}/item-types/{id}": {
      "delete": {
        "operationId": "deleteItemType",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Deletes an object from the database",
        "tags": [
          "item-type-service"
        ]
      },
      "get": {
        "operationId": "getItemType",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ItemType"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get an object from the database",
        "tags": [
          "item-type-service"
        ]
      },
      "put": {
        "operationId": "updateItemType",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ItemType"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Updates an object in the database",
        "tags": [
          "item-type-service"
        ]
      }
    },
    "/api/{universe}/items": {
      "delete": {
        "operationId": "deleteAllItems",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Deletes all objects with the given ids from the database",
        "tags": [
          "item-service"
        ]
      },
      "get": {
        "operationId": "getAllItems",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/Item"
                      },
                      {
                        "$ref": "#/components/schemas/Armor"
                      },
                      {
                        "$ref": "#/components/schemas/Jewellery"
                      },
                      {
                        "$ref": "#/components/schemas/Shield"
                      },
                      {
                        "$ref": "#/components/schemas/Weapon"
                      }
                    ]
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get all objects from the database",
        "tags": [
          "item-service"
        ]
      },
      "post": {
        "operationId": "insertAllItems",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Item"
                    },
                    {
                      "$ref": "#/components/schemas/Armor"
                    },
                    {
                      "$ref": "#/components/schemas/Jewellery"
                    },
                    {
                      "$ref": "#/components/schemas/Shield"
                    },
                    {
                      "$ref": "#/components/schemas/Weapon"
                    }
                  ]
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/Item"
                      },
                      {
                        "$ref": "#/components/schemas/Armor"
                      },
                      {
                        "$ref": "#/components/schemas/Jewellery"
                      },
                      {
                        "$ref": "#/components/schemas/Shield"
                      },
                      {
                        "$ref": "#/components/schemas/Weapon"
                      }
                    ]
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Inserts the objects into the database",
        "tags": [
          "item-service"
        ]
      }
    },
    "/api/{universe}/items/{id}": {
      "delete": {
        "operationId": "deleteItem",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Deletes an object from the database",
        "tags": [
          "item-service"
        ]
      },
      "get": {
        "operationId": "getItem",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Item"
                    },
                    {
                      "$ref": "#/components/schemas/Armor"
                    },
                    {
                      "$ref": "#/components/schemas/Jewellery"
                    },
                    {
                      "$ref": "#/components/schemas/Shield"
                    },
                    {
                      "$ref": "#/components/schemas/Weapon"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get an object from the database",
        "tags": [
          "item-service"
        ]
      },
      "put": {
        "operationId": "updateItem",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Item"
                  },
                  {
                    "$ref": "#/components/schemas/Armor"
                  },
                  {
                    "$ref": "#/components/schemas/Jewellery"
                  },
                  {
                    "$ref": "#/components/schemas/Shield"
                  },
                  {
                    "$ref": "#/components/schemas/Weapon"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Item"
                    },
                    {
                      "$ref": "#/components/schemas/Armor"
                    },
                    {
                      "$ref": "#/components/schemas/Jewellery"
                    },
                    {
                      "$ref": "#/components/schemas/Shield"
                    },
                    {
                      "$ref": "#/components/schemas/Weapon"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Updates an object in the database",
        "tags": [
          "item-service"
        ]
      }
    },
    "/api/{universe}/materials": {
      "delete": {
        "operationId": "deleteAllMaterials",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Deletes all objects with the given ids from the database",
        "tags": [
          "material-service"
        ]
      },
      "get": {
        "operationId": "getAllMaterials",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Material"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get all objects from the database",
        "tags": [
          "material-service"
        ]
      },
      "post": {
        "operationId": "insertAllMaterials",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Material"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Material"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Inserts the objects into the database",
        "tags": [
          "material-service"
        ]
      }
    },
    "/api/{universe}/materials/{id}": {
      "delete": {
        "operationId": "deleteMaterial",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Deletes an object from the database",
        "tags": [
          "material-service"
        ]
      },
      "get": {
        "operationId": "getMaterial",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Material"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get an object from the database",
        "tags": [
          "material-service"
        ]
      },
      "put": {
        "operationId": "updateMaterial",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Material"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Material"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Updates an object in the database",
        "tags": [
          "material-service"
        ]
      }
    },
    "/api/{universe}/spells": {
      "delete": {
        "operationId": "deleteAllSpells",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Deletes all objects with the given ids from the database",
        "tags": [
          "spell-service"
        ]
      },
      "get": {
        "operationId": "getAllSpells",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Spell"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get all objects from the database",
        "tags": [
          "spell-service"
        ]
      },
      "post": {
        "operationId": "insertAllSpells",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Spell"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Spell"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Inserts the objects into the database",
        "tags": [
          "spell-service"
        ]
      }
    },
    "/api/{universe}/spells/{id}": {
      "delete": {
        "operationId": "deleteSpell",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Deletes an object from the database",
        "tags": [
          "spell-service"
        ]
      },
      "get": {
        "operationId": "getSpell",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Spell"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get an object from the database",
        "tags": [
          "spell-service"
        ]
      },
      "put": {
        "operationId": "updateSpell",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Spell"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Spell"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Updates an object in the database",
        "tags": [
          "spell-service"
        ]
      }
    },
    "/api/{universe}/talents": {
      "delete": {
        "operationId": "deleteAllTalents",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Deletes all objects with the given ids from the database",
        "tags": [
          "talent-service"
        ]
      },
      "get": {
        "operationId": "getAllTalents",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Talent"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get all objects from the database",
        "tags": [
          "talent-service"
        ]
      },
      "post": {
        "operationId": "insertAllTalents",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Talent"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Talent"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Inserts the objects into the database",
        "tags": [
          "talent-service"
        ]
      }
    },
    "/api/{universe}/talents/{id}": {
      "delete": {
        "operationId": "deleteTalent",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Deletes an object from the database",
        "tags": [
          "talent-service"
        ]
      },
      "get": {
        "operationId": "getTalent",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Talent"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get an object from the database",
        "tags": [
          "talent-service"
        ]
      },
      "put": {
        "operationId": "updateTalent",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Talent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Talent"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Updates an object in the database",
        "tags": [
          "talent-service"
        ]
      }
    },
    "/api/{universe}/upgrade-recipes": {
      "delete": {
        "operationId": "deleteAllUpgradeRecipes",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Deletes all objects with the given ids from the database",
        "tags": [
          "upgrade-recipe-service"
        ]
      },
      "get": {
        "operationId": "getAllUpgradeRecipes",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UpgradeRecipe"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get all objects from the database",
        "tags": [
          "upgrade-recipe-service"
        ]
      },
      "post": {
        "operationId": "insertAllUpgradeRecipes",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpgradeRecipe"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UpgradeRecipe"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Inserts the objects into the database",
        "tags": [
          "upgrade-recipe-service"
        ]
      }
    },
    "/api/{universe}/upgrade-recipes/{id}": {
      "delete": {
        "operationId": "deleteUpgradeRecipe",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Deletes an object from the database",
        "tags": [
          "upgrade-recipe-service"
        ]
      },
      "get": {
        "operationId": "getUpgradeRecipe",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UpgradeRecipe"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get an object from the database",
        "tags": [
          "upgrade-recipe-service"
        ]
      },
      "put": {
        "operationId": "updateUpgradeRecipe",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpgradeRecipe"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/UpgradeRecipe"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Updates an object in the database",
        "tags": [
          "upgrade-recipe-service"
        ]
      }
    },
    "/api/{universe}/upgrades": {
      "delete": {
        "operationId": "deleteAllUpgrades",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Deletes all objects with the given ids from the database",
        "tags": [
          "upgrade-service"
        ]
      },
      "get": {
        "operationId": "getAllUpgrades",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Upgrade"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get all objects from the database",
        "tags": [
          "upgrade-service"
        ]
      },
      "post": {
        "operationId": "insertAllUpgrades",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Upgrade"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Upgrade"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Inserts the objects into the database",
        "tags": [
          "upgrade-service"
        ]
      }
    },
    "/api/{universe}/upgrades/{id}": {
      "delete": {
        "operationId": "deleteUpgrade",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Deletes an object from the database",
        "tags": [
          "upgrade-service"
        ]
      },
      "get": {
        "operationId": "getUpgrade",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Upgrade"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get an object from the database",
        "tags": [
          "upgrade-service"
        ]
      },
      "put": {
        "operationId": "updateUpgrade",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Upgrade"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Upgrade"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Updates an object in the database",
        "tags": [
          "upgrade-service"
        ]
      }
    },
    "/{destination}": {
      "get": {
        "operationId": "getPage",
        "parameters": [
          {
            "in": "path",
            "name": "destination",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "page-service"
        ]
      }
    },
    "/{universe}/primary-attributes": {
      "delete": {
        "operationId": "deleteAllPrimaryAttributes",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Deletes all objects with the given ids from the database",
        "tags": [
          "primary-attribute-service"
        ]
      },
      "get": {
        "operationId": "getAllPrimaryAttributes",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrimaryAttribute"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get all objects from the database",
        "tags": [
          "primary-attribute-service"
        ]
      },
      "post": {
        "operationId": "insertAllPrimaryAttributes",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PrimaryAttribute"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PrimaryAttribute"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Inserts the objects into the database",
        "tags": [
          "primary-attribute-service"
        ]
      }
    },
    "/{universe}/primary-attributes/{id}": {
      "delete": {
        "operationId": "deletePrimaryAttribute",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Deletes an object from the database",
        "tags": [
          "primary-attribute-service"
        ]
      },
      "get": {
        "operationId": "getPrimaryAttribute",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PrimaryAttribute"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get an object from the database",
        "tags": [
          "primary-attribute-service"
        ]
      },
      "put": {
        "operationId": "updatePrimaryAttribute",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrimaryAttribute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PrimaryAttribute"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Updates an object in the database",
        "tags": [
          "primary-attribute-service"
        ]
      }
    },
    "/{universe}/secondary-attributes": {
      "delete": {
        "operationId": "deleteAllSecondaryAttributes",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Deletes all objects with the given ids from the database",
        "tags": [
          "secondary-attribute-service"
        ]
      },
      "get": {
        "operationId": "getAllSecondaryAttributes",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ids",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SecondaryAttribute"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get all objects from the database",
        "tags": [
          "secondary-attribute-service"
        ]
      },
      "post": {
        "operationId": "insertAllSecondaryAttributes",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SecondaryAttribute"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SecondaryAttribute"
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Inserts the objects into the database",
        "tags": [
          "secondary-attribute-service"
        ]
      }
    },
    "/{universe}/secondary-attributes/{id}": {
      "delete": {
        "operationId": "deleteSecondaryAttribute",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "summary": "Deletes an object from the database",
        "tags": [
          "secondary-attribute-service"
        ]
      },
      "get": {
        "operationId": "getSecondaryAttribute",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SecondaryAttribute"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get an object from the database",
        "tags": [
          "secondary-attribute-service"
        ]
      },
      "put": {
        "operationId": "updateSecondaryAttribute",
        "parameters": [
          {
            "in": "path",
            "name": "universe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SecondaryAttribute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SecondaryAttribute"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Updates an object in the database",
        "tags": [
          "secondary-attribute-service"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AdditiveUpgradeEffect": {
        "required": [
          "description",
          "upgradeManipulator"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/UpgradeEffect"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "format": "float"
              }
            }
          }
        ]
      },
      "Armor": {
        "required": [
          "armor",
          "description",
          "effect",
          "material",
          "maximumStackSize",
          "minimumStackSize",
          "name",
          "note",
          "rarity",
          "requirement",
          "subtype",
          "tier",
          "type",
          "upgradeSlots",
          "vendorPrice",
          "weight"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Item"
          },
          {
            "type": "object",
            "properties": {
              "armor": {
                "type": "integer",
                "format": "int32"
              },
              "material": {
                "$ref": "#/components/schemas/Material"
              },
              "upgradeSlots": {
                "type": "integer",
                "format": "int32"
              },
              "weight": {
                "type": "number",
                "format": "float"
              }
            }
          }
        ]
      },
      "CharacterResourceRecipeEntry": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IRecipeEntry"
          },
          {
            "type": "object",
            "properties": {
              "amountOfRequiredUnits": {
                "type": "number",
                "format": "float"
              },
              "resource": {
                "type": "string",
                "enum": [
                  "HEALTH",
                  "MANA",
                  "MENTAL_HEALTH"
                ]
              }
            }
          }
        ]
      },
      "CraftingRecipe": {
        "required": [
          "materials",
          "otherCircumstances",
          "product",
          "profession",
          "requirement"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "materials": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CharacterResourceRecipeEntry"
                },
                {
                  "$ref": "#/components/schemas/ItemRecipeEntry"
                },
                {
                  "$ref": "#/components/schemas/MaterialRecipeEntry"
                }
              ]
            }
          },
          "otherCircumstances": {
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/ItemRecipeEntry"
          },
          "profession": {
            "type": "string"
          },
          "requirement": {
            "type": "string"
          },
          "sideProduct": {
            "$ref": "#/components/schemas/ItemRecipeEntry"
          }
        }
      },
      "CurrencyCalculation": {
        "required": [
          "baseCurrency",
          "baseCurrencyShortForm",
          "calculationEntries"
        ],
        "type": "object",
        "properties": {
          "baseCurrency": {
            "type": "string"
          },
          "baseCurrencyShortForm": {
            "type": "string"
          },
          "calculationEntries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyCalculationEntry"
            }
          }
        }
      },
      "CurrencyCalculationEntry": {
        "required": [
          "currency",
          "currencyShortForm"
        ],
        "type": "object",
        "properties": {
          "currency": {
            "type": "string"
          },
          "currencyShortForm": {
            "type": "string"
          },
          "factor": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ERarity": {
        "type": "string",
        "enum": [
          "COMMON",
          "UNCOMMON",
          "RARE",
          "EPIC",
          "LEGENDARY",
          "GODLIKE"
        ]
      },
      "GrantedUniverseAuthorityDTO": {
        "required": [
          "permission",
          "universe"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IGrantedAuthorityDTO"
          },
          {
            "type": "object",
            "properties": {
              "permission": {
                "type": "string"
              },
              "universe": {
                "type": "string"
              }
            }
          }
        ]
      },
      "IGrantedAuthorityDTO": {
        "type": "object"
      },
      "IRecipeEntry": {
        "type": "object"
      },
      "Item": {
        "required": [
          "description",
          "effect",
          "maximumStackSize",
          "minimumStackSize",
          "name",
          "note",
          "rarity",
          "requirement",
          "subtype",
          "tier",
          "type",
          "vendorPrice"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "effect": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "maximumStackSize": {
            "type": "integer",
            "format": "int32"
          },
          "minimumStackSize": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "rarity": {
            "$ref": "#/components/schemas/ERarity"
          },
          "requirement": {
            "type": "string"
          },
          "subtype": {
            "$ref": "#/components/schemas/ItemType"
          },
          "tier": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/ItemType"
          },
          "vendorPrice": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ItemRecipeEntry": {
        "required": [
          "item"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IRecipeEntry"
          },
          {
            "type": "object",
            "properties": {
              "amountOfRequiredUnits": {
                "type": "number",
                "format": "float"
              },
              "item": {
                "$ref": "#/components/schemas/Item"
              }
            }
          }
        ]
      },
      "ItemType": {
        "required": [
          "name",
          "typeRestriction"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "typeRestriction": {
            "type": "string",
            "enum": [
              "ITEM",
              "EQUIPMENT",
              "JEWELLERY",
              "WEAPON",
              "DEFENSIVE_ITEM",
              "SHIELD",
              "HANDHELD",
              "ARMOR"
            ]
          }
        }
      },
      "ItemTypeTranslation": {
        "required": [
          "broaderVariants",
          "type"
        ],
        "type": "object",
        "properties": {
          "broaderVariants": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemType"
            }
          },
          "id": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ItemType"
          }
        }
      },
      "Jewellery": {
        "required": [
          "description",
          "effect",
          "material",
          "maximumStackSize",
          "minimumStackSize",
          "name",
          "note",
          "rarity",
          "requirement",
          "subtype",
          "tier",
          "type",
          "upgradeSlots",
          "vendorPrice"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Item"
          },
          {
            "type": "object",
            "properties": {
              "material": {
                "$ref": "#/components/schemas/Material"
              },
              "upgradeSlots": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "Material": {
        "required": [
          "items",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaterialItem"
            }
          },
          "name": {
            "type": "string"
          }
        }
      },
      "MaterialItem": {
        "required": [
          "item"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "item": {
            "$ref": "#/components/schemas/Item"
          }
        }
      },
      "MaterialRecipeEntry": {
        "required": [
          "material"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IRecipeEntry"
          },
          {
            "type": "object",
            "properties": {
              "amountOfRequiredUnits": {
                "type": "number",
                "format": "float"
              },
              "material": {
                "$ref": "#/components/schemas/Material"
              }
            }
          }
        ]
      },
      "MultiplicativeUpgradeEffect": {
        "required": [
          "description",
          "upgradeManipulator"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/UpgradeEffect"
          },
          {
            "type": "object",
            "properties": {
              "factor": {
                "type": "number",
                "format": "float"
              }
            }
          }
        ]
      },
      "PasswordChange": {
        "type": "object",
        "properties": {
          "newPassword": {
            "type": "string"
          },
          "oldPassword": {
            "type": "string"
          }
        }
      },
      "PnPUser": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "PnPUserCreation": {
        "required": [
          "authorities",
          "displayName",
          "username"
        ],
        "type": "object",
        "properties": {
          "authorities": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GrantedUniverseAuthorityDTO"
                },
                {
                  "$ref": "#/components/schemas/RoleAuthorityDTO"
                }
              ]
            }
          },
          "displayName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "PrimaryAttribute": {
        "required": [
          "name",
          "shortName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "shortName": {
            "type": "string"
          }
        }
      },
      "PrimaryAttributeDependency": {
        "required": [
          "primaryAttribute"
        ],
        "type": "object",
        "properties": {
          "factor": {
            "type": "number",
            "format": "double"
          },
          "primaryAttribute": {
            "$ref": "#/components/schemas/PrimaryAttribute"
          }
        }
      },
      "RoleAuthorityDTO": {
        "required": [
          "role"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/IGrantedAuthorityDTO"
          },
          {
            "type": "object",
            "properties": {
              "role": {
                "type": "string"
              }
            }
          }
        ]
      },
      "SecondaryAttribute": {
        "required": [
          "consumable",
          "name",
          "primaryAttributeDependencies"
        ],
        "type": "object",
        "properties": {
          "consumable": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "primaryAttributeDependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PrimaryAttributeDependency"
            }
          }
        }
      },
      "Shield": {
        "required": [
          "armor",
          "description",
          "effect",
          "hit",
          "initiative",
          "material",
          "maximumStackSize",
          "minimumStackSize",
          "name",
          "note",
          "rarity",
          "requirement",
          "subtype",
          "tier",
          "type",
          "upgradeSlots",
          "vendorPrice",
          "weight"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Item"
          },
          {
            "type": "object",
            "properties": {
              "armor": {
                "type": "integer",
                "format": "int32"
              },
              "hit": {
                "type": "integer",
                "format": "int32"
              },
              "initiative": {
                "type": "number",
                "format": "float"
              },
              "material": {
                "$ref": "#/components/schemas/Material"
              },
              "upgradeSlots": {
                "type": "integer",
                "format": "int32"
              },
              "weight": {
                "type": "number",
                "format": "float"
              }
            }
          }
        ]
      },
      "SimpleUpgradeEffect": {
        "required": [
          "description",
          "upgradeManipulator"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/UpgradeEffect"
          }
        ]
      },
      "Spell": {
        "required": [
          "castTime",
          "cost",
          "effect",
          "name",
          "talents",
          "tier"
        ],
        "type": "object",
        "properties": {
          "castTime": {
            "type": "string"
          },
          "cost": {
            "type": "string"
          },
          "effect": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "talents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Talent"
            }
          },
          "tier": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "StreamingResponseBody": {
        "type": "object"
      },
      "Talent": {
        "required": [
          "firstAttribute",
          "group",
          "name",
          "secondAttribute",
          "thirdAttribute"
        ],
        "type": "object",
        "properties": {
          "firstAttribute": {
            "$ref": "#/components/schemas/PrimaryAttribute"
          },
          "group": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "secondAttribute": {
            "$ref": "#/components/schemas/PrimaryAttribute"
          },
          "thirdAttribute": {
            "$ref": "#/components/schemas/PrimaryAttribute"
          }
        }
      },
      "Universe": {
        "required": [
          "description",
          "displayName",
          "name",
          "settings",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "displayName": {
            "maxLength": 64,
            "minLength": 3,
            "type": "string"
          },
          "name": {
            "pattern": "[a-z][a-z-]+[a-z]",
            "type": "string"
          },
          "settings": {
            "$ref": "#/components/schemas/UniverseSettings"
          },
          "shortDescription": {
            "type": "string"
          }
        }
      },
      "UniverseSettings": {
        "required": [
          "currencyCalculation",
          "wearFactor"
        ],
        "type": "object",
        "properties": {
          "currencyCalculation": {
            "$ref": "#/components/schemas/CurrencyCalculation"
          },
          "wearFactor": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Upgrade": {
        "required": [
          "effects",
          "name",
          "slots",
          "target",
          "vendorPrice"
        ],
        "type": "object",
        "properties": {
          "effects": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AdditiveUpgradeEffect"
                },
                {
                  "$ref": "#/components/schemas/MultiplicativeUpgradeEffect"
                },
                {
                  "$ref": "#/components/schemas/SimpleUpgradeEffect"
                }
              ]
            }
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "slots": {
            "type": "integer",
            "format": "int32"
          },
          "target": {
            "$ref": "#/components/schemas/ItemType"
          },
          "vendorPrice": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpgradeEffect": {
        "required": [
          "description",
          "upgradeManipulator"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "upgradeManipulator": {
            "type": "string",
            "enum": [
              "NONE",
              "SLOTS",
              "DAMAGE",
              "HIT",
              "INITIATIVE",
              "ARMOR",
              "WEIGHT"
            ]
          }
        }
      },
      "UpgradeRecipe": {
        "required": [
          "materials",
          "requiredUpgrades",
          "requirement",
          "upgrade"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "materials": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CharacterResourceRecipeEntry"
                },
                {
                  "$ref": "#/components/schemas/ItemRecipeEntry"
                },
                {
                  "$ref": "#/components/schemas/MaterialRecipeEntry"
                }
              ]
            }
          },
          "requiredUpgrades": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Upgrade"
            }
          },
          "requirement": {
            "type": "string"
          },
          "upgrade": {
            "$ref": "#/components/schemas/Upgrade"
          }
        }
      },
      "UserUniversePermissionDTO": {
        "required": [
          "displayName",
          "dto"
        ],
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          },
          "dto": {
            "$ref": "#/components/schemas/GrantedUniverseAuthorityDTO"
          }
        }
      },
      "Weapon": {
        "required": [
          "damage",
          "description",
          "dice",
          "effect",
          "hit",
          "initiative",
          "material",
          "maximumStackSize",
          "minimumStackSize",
          "name",
          "note",
          "rarity",
          "requirement",
          "subtype",
          "tier",
          "type",
          "upgradeSlots",
          "vendorPrice"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Item"
          },
          {
            "type": "object",
            "properties": {
              "damage": {
                "type": "integer",
                "format": "int32"
              },
              "dice": {
                "type": "string"
              },
              "hit": {
                "type": "integer",
                "format": "int32"
              },
              "initiative": {
                "type": "number",
                "format": "float"
              },
              "material": {
                "$ref": "#/components/schemas/Material"
              },
              "upgradeSlots": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      }
    }
  }
}